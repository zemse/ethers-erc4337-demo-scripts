/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  MasterOfPaymaster,
  MasterOfPaymasterInterface,
} from "../MasterOfPaymaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "extraUnstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "getHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    name: "setEntryPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "requiredPreFund",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610c7f380380610c7f83398101604081905261002f91610123565b8061003933610049565b61004281610099565b5050610153565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6100a16100c3565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146101215760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b565b60006020828403121561013557600080fd5b81516001600160a01b038116811461014c57600080fd5b9392505050565b610b1d806101626000396000f3fe6080604052600436106100dd5760003560e01c8063bb9fe6bf1161007f578063c399ec8811610059578063c399ec8814610226578063d0e30db01461023b578063f2fde38b14610243578063f465c77e1461026357600080fd5b8063bb9fe6bf146101c3578063c23a5cea146101d8578063c266f292146101f857600080fd5b8063715018a6116100bb578063715018a6146101375780638da5cb5b1461014c578063a9a2340914610183578063b0d691fe146101a357600080fd5b80630396cb60146100e2578063205c2878146100f7578063584465f214610117575b600080fd5b6100f56100f0366004610813565b610294565b005b34801561010357600080fd5b506100f561011236600461084c565b61037c565b34801561012357600080fd5b506100f5610132366004610878565b6103d2565b34801561014357600080fd5b506100f56103fc565b34801561015857600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b34801561018f57600080fd5b506100f561019e366004610895565b610410565b3480156101af57600080fd5b50600154610166906001600160a01b031681565b3480156101cf57600080fd5b506100f561042a565b3480156101e457600080fd5b506100f56101f3366004610878565b610496565b34801561020457600080fd5b5061021861021336600461093d565b610500565b60405190815260200161017a565b34801561023257600080fd5b506102186105d2565b6100f5610644565b34801561024f57600080fd5b506100f561025e366004610878565b61068a565b34801561026f57600080fd5b5061028761027e36600461097a565b60609392505050565b60405161017a91906109c8565b61029c610708565b60015460408051630721732f60e31b815290516001600160a01b0390921691630396cb609134918591859163390b99789160048082019260209290919082900301816000875af11580156102f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103189190610a1d565b6103229190610a3a565b6040516001600160e01b031960e085901b16815263ffffffff9190911660048201526024016000604051808303818588803b15801561036057600080fd5b505af1158015610374573d6000803e3d6000fd5b505050505050565b610384610708565b60015460405163040b850f60e31b81526001600160a01b038481166004830152602482018490529091169063205c287890604401600060405180830381600087803b15801561036057600080fd5b6103da610708565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b610404610708565b61040e6000610762565b565b6104186107b2565b610424848484846107c9565b50505050565b610432610708565b600160009054906101000a90046001600160a01b03166001600160a01b031663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561048257600080fd5b505af1158015610424573d6000803e3d6000fd5b61049e610708565b60015460405163611d2e7560e11b81526001600160a01b0383811660048301529091169063c23a5cea90602401600060405180830381600087803b1580156104e557600080fd5b505af11580156104f9573d6000803e3d6000fd5b5050505050565b6000813560208301356105166040850185610a70565b604051610524929190610abe565b60405190819003902061053a6060860186610a70565b604051610548929190610abe565b604080519182900382206001600160a01b03909516602083015281019290925260608201526080808201929092529083013560a08083019190915283013560c08083019190915283013560e0808301919091528301356101008083019190915283013561012082015261014001604051602081830303815290604052805190602001209050919050565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561061b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063f9190610ace565b905090565b60015460405163b760faf960e01b81523060048201526001600160a01b039091169063b760faf99034906024016000604051808303818588803b1580156104e557600080fd5b610692610708565b6001600160a01b0381166106fc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61070581610762565b50565b6000546001600160a01b0316331461040e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106f3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001546001600160a01b0316331461040e57600080fd5b60405162461bcd60e51b815260206004820152600d60248201526c6d757374206f7665727269646560981b60448201526064016106f3565b63ffffffff8116811461070557600080fd5b60006020828403121561082557600080fd5b813561083081610801565b9392505050565b6001600160a01b038116811461070557600080fd5b6000806040838503121561085f57600080fd5b823561086a81610837565b946020939093013593505050565b60006020828403121561088a57600080fd5b813561083081610837565b600080600080606085870312156108ab57600080fd5b8435600381106108ba57600080fd5b9350602085013567ffffffffffffffff808211156108d757600080fd5b818701915087601f8301126108eb57600080fd5b8135818111156108fa57600080fd5b88602082850101111561090c57600080fd5b95986020929092019750949560400135945092505050565b6000610160828403121561093757600080fd5b50919050565b60006020828403121561094f57600080fd5b813567ffffffffffffffff81111561096657600080fd5b61097284828501610924565b949350505050565b60008060006060848603121561098f57600080fd5b833567ffffffffffffffff8111156109a657600080fd5b6109b286828701610924565b9660208601359650604090950135949350505050565b600060208083528351808285015260005b818110156109f5578581018301518582016040015282016109d9565b81811115610a07576000604083870101525b50601f01601f1916929092016040019392505050565b600060208284031215610a2f57600080fd5b815161083081610801565b600063ffffffff808316818516808303821115610a6757634e487b7160e01b600052601160045260246000fd5b01949350505050565b6000808335601e19843603018112610a8757600080fd5b83018035915067ffffffffffffffff821115610aa257600080fd5b602001915036819003821315610ab757600080fd5b9250929050565b8183823760009101908152919050565b600060208284031215610ae057600080fd5b505191905056fea264697066735822122070142b68d314b578f98f54d62daed3ca0da02b78915cad768389a7790cf8160364736f6c634300080f0033";

type MasterOfPaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MasterOfPaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MasterOfPaymaster__factory extends ContractFactory {
  constructor(...args: MasterOfPaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MasterOfPaymaster> {
    return super.deploy(
      _entryPoint,
      overrides || {}
    ) as Promise<MasterOfPaymaster>;
  }
  override getDeployTransaction(
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_entryPoint, overrides || {});
  }
  override attach(address: string): MasterOfPaymaster {
    return super.attach(address) as MasterOfPaymaster;
  }
  override connect(signer: Signer): MasterOfPaymaster__factory {
    return super.connect(signer) as MasterOfPaymaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MasterOfPaymasterInterface {
    return new utils.Interface(_abi) as MasterOfPaymasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MasterOfPaymaster {
    return new Contract(address, _abi, signerOrProvider) as MasterOfPaymaster;
  }
}
