/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  NftFullSubsidyPaymaster,
  NftFullSubsidyPaymasterInterface,
} from "../NftFullSubsidyPaymaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
    ],
    name: "addNft",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "extraUnstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nftWhitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
    ],
    name: "removeNft",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    name: "setEntryPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "requiredPreFund",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610dd7380380610dd783398101604081905261002f91610123565b8061003933610049565b61004281610099565b5050610153565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6100a16100c3565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146101215760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b565b60006020828403121561013557600080fd5b81516001600160a01b038116811461014c57600080fd5b9392505050565b610c75806101626000396000f3fe6080604052600436106100f35760003560e01c8063a9a234091161008a578063c399ec8811610059578063c399ec881461028e578063d0e30db0146102b1578063f2fde38b146102b9578063f465c77e146102d957600080fd5b8063a9a2340914610219578063b0d691fe14610239578063bb9fe6bf14610259578063c23a5cea1461026e57600080fd5b806346b31b6e116100c657806346b31b6e1461016d578063584465f2146101b2578063715018a6146101d25780638da5cb5b146101e757600080fd5b80630396cb60146100f857806312d98f241461010d578063205c28781461012d578063447a91fd1461014d575b600080fd5b61010b61010636600461096c565b610306565b005b34801561011957600080fd5b5061010b6101283660046109a5565b6103ee565b34801561013957600080fd5b5061010b6101483660046109c2565b610417565b34801561015957600080fd5b5061010b6101683660046109a5565b61046d565b34801561017957600080fd5b5061019d6101883660046109a5565b60026020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b3480156101be57600080fd5b5061010b6101cd3660046109a5565b610499565b3480156101de57600080fd5b5061010b6104c3565b3480156101f357600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020016101a9565b34801561022557600080fd5b5061010b6102343660046109ee565b6104d7565b34801561024557600080fd5b50600154610201906001600160a01b031681565b34801561026557600080fd5b5061010b6104f1565b34801561027a57600080fd5b5061010b6102893660046109a5565b61055d565b34801561029a57600080fd5b506102a36105c7565b6040519081526020016101a9565b61010b610639565b3480156102c557600080fd5b5061010b6102d43660046109a5565b61067f565b3480156102e557600080fd5b506102f96102f4366004610a7d565b6106fd565b6040516101a99190610ad1565b61030e610861565b60015460408051630721732f60e31b815290516001600160a01b0390921691630396cb609134918591859163390b99789160048082019260209290919082900301816000875af1158015610366573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038a9190610b26565b6103949190610b43565b6040516001600160e01b031960e085901b16815263ffffffff9190911660048201526024016000604051808303818588803b1580156103d257600080fd5b505af11580156103e6573d6000803e3d6000fd5b505050505050565b6103f6610861565b6001600160a01b03166000908152600260205260409020805460ff19169055565b61041f610861565b60015460405163040b850f60e31b81526001600160a01b038481166004830152602482018490529091169063205c287890604401600060405180830381600087803b1580156103d257600080fd5b610475610861565b6001600160a01b03166000908152600260205260409020805460ff19166001179055565b6104a1610861565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6104cb610861565b6104d560006108bb565b565b6104df61090b565b6104eb84848484610922565b50505050565b6104f9610861565b600160009054906101000a90046001600160a01b03166001600160a01b031663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561054957600080fd5b505af11580156104eb573d6000803e3d6000fd5b610565610861565b60015460405163611d2e7560e11b81526001600160a01b0383811660048301529091169063c23a5cea90602401600060405180830381600087803b1580156105ac57600080fd5b505af11580156105c0573d6000803e3d6000fd5b5050505050565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610610573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106349190610b79565b905090565b60015460405163b760faf960e01b81523060048201526001600160a01b039091169063b760faf99034906024016000604051808303818588803b1580156105ac57600080fd5b610687610861565b6001600160a01b0381166106f15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6106fa816108bb565b50565b6060600061070f610120860186610b92565b61071d916014908290610be0565b61072691610c0a565b60601c60008181526002602052604090205490915060ff166107805760405162461bcd60e51b815260206004820152601360248201527213999d081b9bdd081dda1a5d195b1a5cdd1959606a1b60448201526064016106e8565b60006001600160a01b0382166370a0823161079e60208901896109a5565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156107e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108069190610b79565b9050600081116108585760405162461bcd60e51b815260206004820152601f60248201527f4e6f206e66747320666f756e642061742077616c6c657420616464726573730060448201526064016106e8565b50509392505050565b6000546001600160a01b031633146104d55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106e8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001546001600160a01b031633146104d557600080fd5b60405162461bcd60e51b815260206004820152600d60248201526c6d757374206f7665727269646560981b60448201526064016106e8565b63ffffffff811681146106fa57600080fd5b60006020828403121561097e57600080fd5b81356109898161095a565b9392505050565b6001600160a01b03811681146106fa57600080fd5b6000602082840312156109b757600080fd5b813561098981610990565b600080604083850312156109d557600080fd5b82356109e081610990565b946020939093013593505050565b60008060008060608587031215610a0457600080fd5b843560038110610a1357600080fd5b9350602085013567ffffffffffffffff80821115610a3057600080fd5b818701915087601f830112610a4457600080fd5b813581811115610a5357600080fd5b886020828501011115610a6557600080fd5b95986020929092019750949560400135945092505050565b600080600060608486031215610a9257600080fd5b833567ffffffffffffffff811115610aa957600080fd5b84016101608187031215610abc57600080fd5b95602085013595506040909401359392505050565b600060208083528351808285015260005b81811015610afe57858101830151858201604001528201610ae2565b81811115610b10576000604083870101525b50601f01601f1916929092016040019392505050565b600060208284031215610b3857600080fd5b81516109898161095a565b600063ffffffff808316818516808303821115610b7057634e487b7160e01b600052601160045260246000fd5b01949350505050565b600060208284031215610b8b57600080fd5b5051919050565b6000808335601e19843603018112610ba957600080fd5b83018035915067ffffffffffffffff821115610bc457600080fd5b602001915036819003821315610bd957600080fd5b9250929050565b60008085851115610bf057600080fd5b83861115610bfd57600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff198135818116916014851015610c375780818660140360031b1b83161692505b50509291505056fea264697066735822122007de219d4a3f8c35d7cf549f6bad3239c52b3abbfcbf70f494a502c0e8c0c96764736f6c634300080f0033";

type NftFullSubsidyPaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NftFullSubsidyPaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NftFullSubsidyPaymaster__factory extends ContractFactory {
  constructor(...args: NftFullSubsidyPaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NftFullSubsidyPaymaster> {
    return super.deploy(
      _entryPoint,
      overrides || {}
    ) as Promise<NftFullSubsidyPaymaster>;
  }
  override getDeployTransaction(
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_entryPoint, overrides || {});
  }
  override attach(address: string): NftFullSubsidyPaymaster {
    return super.attach(address) as NftFullSubsidyPaymaster;
  }
  override connect(signer: Signer): NftFullSubsidyPaymaster__factory {
    return super.connect(signer) as NftFullSubsidyPaymaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NftFullSubsidyPaymasterInterface {
    return new utils.Interface(_abi) as NftFullSubsidyPaymasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NftFullSubsidyPaymaster {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NftFullSubsidyPaymaster;
  }
}
